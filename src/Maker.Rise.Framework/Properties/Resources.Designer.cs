//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Maker.Rise.Properties {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Maker.Rise.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à #version 400 core
        ///
        ///in vec2 pass_texture_coordinats;
        ///in vec3 pass_surface_normal;
        ///in vec3 to_light_vector;
        ///in vec3 to_camera_vector;
        ///
        ///out vec4 out_Color;
        ///
        ///uniform sampler2D textureSampler;
        ///uniform vec3 sun_color;
        ///
        ///// Material Properties
        ///uniform float material_reflectivity;
        ///uniform float material_shine_damper;
        ///
        ///// fog
        ///in float vert_visibility;
        ///uniform vec3 fog_color;
        ///
        ///// Scene
        ///uniform float scene_brightness;
        ///
        ///void main(void)
        ///{
        ///    vec3 unit_normal = normalize(pass_surface_normal);
        ///   [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string BaseMaterialFragShader {
            get {
                return ResourceManager.GetString("BaseMaterialFragShader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à #version 400 core
        ///
        ///// Mesh
        ///in vec3 position;
        ///in vec2 texture_coordinats;
        ///in vec3 normals;
        ///
        ///// Pass to fragment shaders
        ///out vec2 pass_texture_coordinats;
        ///out vec3 pass_surface_normal;
        ///
        ///// Fog.
        ///out float vert_visibility;
        ///uniform float fog_density;
        ///uniform float fog_gradiant;
        ///uniform float fog_distance;
        ///
        ///// Transforms.
        ///uniform mat4 entity_transform;
        ///uniform mat4 projection_matrix;
        ///uniform mat4 view_matrix;
        ///
        ///// Sun And light.
        ///uniform vec3 sun_position;
        ///out vec3 to_light_vector;
        ///out vec3 [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string BaseMaterialVertShader {
            get {
                return ResourceManager.GetString("BaseMaterialVertShader", resourceCulture);
            }
        }
    }
}
